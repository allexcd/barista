version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.1
  snyk: snyk/snyk@0.0.8

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#   E X E C U T O R S:
#   ------------------------------------------------------------------------
#   Executors to run a job with
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

executors:
  # Base image for publishing
  docker-publisher:
    working_directory: ~/barista
    environment:
      WORKSPACE_IMAGE: designops/workspace-base
    docker:
      - image: circleci/buildpack-deps:stretch

  # Base image for building node based environments
  node-builder:
    docker:
      - image: circleci/node:12


  barista:
    working_directory: /dynatrace
    docker:
      - image: designops/workspace-base:test-1
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#   P A T T E R N S:
#   ------------------------------------------------------------------------
#   Patterns are used to provide reuseable samples of code.
#   This is a yml feature to reduce redundancy.
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

filter_branches: &filter_branches
  filters:
    branches:
      # The cherry picker creates branches where the cherrypick is perfomred
      # Those are instantly failing in circle and should be ignored.
      ignore: /^cherry-pick-.*/

defaults: &defaults
  working_directory: ~/barista
  docker:
    - image: circleci/node:12


npm_cache: &npm_cache
  keys:
    - npm-packages-{{ checksum "package-lock.json" }}
    - npm-packages-

# The last sha of the branch that holds the previous commit sha.
# could be either master, 4.x or 4.10.x
sha_branch_cache: &sha_branch_cache
  key: last-{{ .Environment.CIRCLE_BRANCH }}-sha

set_env: &set_env
  name: Setup Environment Variables
  command:  node dist/libs/workspace/src/scripts/affected-args.js


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#   C O M M A N D S:
#   ------------------------------------------------------------------------
#   Commands that can be used in jobs
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

commands:
  prepare_job:
    description: >-
      To be written
    steps:
      - run: ls -lah /dynatrace
      - run: touch "/dynatrace/temp-${CIRCLE_BUILD_NUM}"
      # - attach_workspace:
      #     at: ~/barista
      # - run:
      #     name: Setup Environment Variables
      #     command:  node dist/libs/workspace/src/scripts/affected-args.js
      # - run: printenv

  skip_for_forked_pull_requests:
    description: >-
      If this build is from a fork, stop executing the current job and return success.
      This is needed to avoid steps that will fail due to missing credentials.
    steps:
      - run:
          name: Early return if this build is from a forked PR
          command: |
            if [ -n "$CIRCLE_PR_NUMBER" ]; then
              echo "Skip job on forked PR."
              circleci step halt
            fi


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#   J O B S:
#   ------------------------------------------------------------------------
#   Jobs that can be executed
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

jobs:

# - Builds docker image for workspace
  build-docker-image:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Login to Docker Registry
          command: docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
      - run:
          name: Build Docker Image
          command: docker build -t $WORKSPACE_IMAGE:latest ./ -f ./.deployment/workspace-base.Dockerfile
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            docker push $WORKSPACE_IMAGE:latest

# - install npm dependencies
  install:
    <<: *defaults
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          <<: *npm_cache
      - restore_cache:
          <<: *sha_branch_cache
      - run:
          <<: *set_env
      - run:
          name: Install npm dependencies 🐍
          command: npm ci
      - save_cache:
          key: npm-packages-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/barista
          paths:
            - .

# - sonar checks
  sonar:
    <<: *defaults
    environment:
      # - sonar needs more memory for the scanner run if a LOT of files are changed
      SONAR_SCANNER_OPTS: -Xmx1024m
    steps:
      - attach_workspace:
          at: ~/barista
      - sonarcloud/scan

# - snyk security checks
  security-checks:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/barista
      - snyk/scan:
          organization: dynatrace-oss

# - check formatting if all files are formatted with prettier
  check-formatting:
    executor: barista
    steps:
      - prepare_job
      # - run: yarn format:check ${AFFECTED_ARGS}

# - static codeanalysis of the files
  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/barista
      - run:
          <<: *set_env
      - run: ./node_modules/.bin/nx workspace-lint
      - run: yarn affected:lint ${AFFECTED_ARGS} --parallel

# - static codeanalysis of the style files
  lint-styles:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/barista
      - run:
          <<: *set_env
      - run: yarn affected --target=lint-styles ${AFFECTED_ARGS} --parallel

# - build all the packages
  build:
    <<: *defaults
    resource_class: xlarge
    steps:
      - attach_workspace:
          at: ~/barista
      - run:
          <<: *set_env
      - run:
          # Workaround for issue:
          # https://github.com/angular/angular/issues/35362
          # https://github.com/nrwl/nx/issues/2108#issuecomment-559863213
          name: Run angular compatibility compiler
          command: npx ngcc
      - run:
          name: Generate examples for the demo application
          command: |
            npm run examples-tools
            npm run barista-tools
      - run: yarn nx affected:build ${AFFECTED_ARGS} --configuration=production --parallel --exclude=examples-tools
      - persist_to_workspace:
          root: ~/barista
          paths:
            - .

# - pack and upload the build artifacts of the components library
  store-build-artifacts:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/barista
      - run:
          name: Create components package if it exists
          command: |
            if [[ -d ./dist/libs/components ]];
            then
              cd dist/libs
              tar czf components.tar.gz ./components/
            fi
      - store_artifacts:
          path: dist/libs/components.tar.gz
          destination: barista-components

# - run unit tests
  unit-test:
    <<: *defaults
    resource_class: large
    steps:
      - attach_workspace:
          at: ~/barista
      - run:
          <<: *set_env
      - run: yarn nx affected:test ${AFFECTED_ARGS} --parallel --runInBand
      - store_test_results:
          path: dist/test-results

# - run end to end tests
  e2e-test:
    <<: *defaults
    resource_class: large
    environment:
      BROWSERSTACK_USE_AUTOMATE: 1
      BROWSERSTACK_DISPLAY_RESOLUTION: 1920x1080
      BROWSERSTACK_TIMEZONE: UTC+1
    steps:
      - attach_workspace:
          at: ~/barista
      - run:
          <<: *set_env
      - restore_cache:
          # the universal e2e needs the compiled dist from the build
          key: build-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run: yarn nx affected:e2e ${AFFECTED_ARGS} --configuration=remote-pr
      - store_test_results:
          path: dist/components-e2e

# - run a11y tests
  a11y:
    <<: *defaults
    resource_class: large
    docker:
      - image: circleci/node:12-browsers
    steps:
      - attach_workspace:
          at: ~/barista
      - run:
          <<: *set_env
      - restore_cache:
          # the a11y tests need the builded templates
          key: build-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run: yarn nx affected --target=a11y ${AFFECTED_ARGS} --parallel --configuration=ci
      - store_test_results:
          path: dist/demos-a11y

# - save the latest hash in a file
  save-latest:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/barista
      - run:
          name: Save current commit sha in a file
          command: |
            MASTER_SHA_FILE=./.config/last-${CIRCLE_BRANCH}-sha.txt
            # If config dir does not exist create it
            if [[ ! -d ./.config ]];
            then
              mkdir ./.config
            fi
            git rev-parse HEAD > "$MASTER_SHA_FILE"
      - save_cache:
          key: last-{{ .Environment.CIRCLE_BRANCH }}-sha-{{ epoch }}
          paths:
            - ./.config/last-{{ .Environment.CIRCLE_BRANCH }}-sha.txt

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#   W O R K F L O W S:
#   ------------------------------------------------------------------------
#   Jobs are getting executed through workflows,
#   they are creating the pipeline.
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

workflows:
  version: 2.1

# - Publish the workspace image on every master build
  workspace-build:
    jobs:
      - build-docker-image:
          filters:
            branches:
              only: master
          # DOCKERHUB_USER is used for publishing
          # DOCKERHUB_PASSWORD is used for publishing
          context: barista

# - Runs on every PR check
  pr-check:
    jobs:
      # - install:
      #     <<: *filter_branches
      - check-formatting:
          <<: *filter_branches
      # - sonar:
      #     <<: *filter_branches
      #     # SONAR_TOKEN is needed for sonar cloud checks
      #     context: barista
      #     requires:
      #       - install
      # - security-checks:
      #     <<: *filter_branches
      #     # SNYK_TOKEN is needed for security checking
      #     context: barista
      #     requires:
      #       - install
      # - lint:
      #     <<: *filter_branches
      #     requires:
      #       - install
      # - lint-styles:
      #     <<: *filter_branches
      #     requires:
      #       - install
      # - unit-test:
      #     <<: *filter_branches
      #     context: barista
      #     requires:
      #       - install
      # - e2e-test:
      #     <<: *filter_branches
      #     # BROWSERSTACK_ACCESS_KEY is needed for browserstack automation
      #     # BROWSERSTACK_USERNAME is needed for browserstack automation
      #     context: barista
      #     requires:
      #       - build
      # - a11y:
      #     <<: *filter_branches
      #     requires:
      #       - build
      # - build:
      #     <<: *filter_branches
      #     requires:
      #       - install
      # - store-build-artifacts:
      #     filters:
      #       branches:
      #         only: /^([0-9]{1,}\.x|[0-9]{1,}\.[0-9]{1,}\.x|master)$/
      #     requires:
      #       - build
      # - save-latest:
      #     filters:
      #       branches:
      #         only: /^([0-9]{1,}\.x|[0-9]{1,}\.[0-9]{1,}\.x|master)$/
      #     requires:
      #       - check-formatting
      #       - sonar
      #       - security-checks
      #       - lint
      #       - lint-styles
      #       - unit-test
      #       - e2e-test
